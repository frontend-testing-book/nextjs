name: Test UI

on: push
env:
  REG_NOTIFY_CLIENT_ID: ${{ secrets.REG_NOTIFY_CLIENT_ID }}
  AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get node version from volta
        id: get-node-version
        uses: keita-hino/get-node-version-from-volta@main

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Cache node_modules
        uses: actions/cache@v3
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

  check:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get node version from volta
        id: get-node-version
        uses: keita-hino/get-node-version-from-volta@main

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run Type Check
        run: pnpm run typecheck

      - name: Run Lint
        run: pnpm run lint

  unit-test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get node version from volta
        id: get-node-version
        uses: keita-hino/get-node-version-from-volta@main

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run Unit Tests
        run: pnpm test

  build-storybook:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get node version from volta
        id: get-node-version
        uses: keita-hino/get-node-version-from-volta@main

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Cache Storybook
        uses: actions/cache@v3
        id: storybook_cache
        with:
          path: storybook-static
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build Storybook
        if: steps.storybook_cache.outputs.cache-hit != 'true'
        run: pnpm run storybook:build --quiet

  test-storybook:
    needs: build-storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get node version from volta
        id: get-node-version
        uses: keita-hino/get-node-version-from-volta@main

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Restore Storybook
        id: storybook_cache
        uses: actions/cache@v3
        with:
          path: storybook-static
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Run Storybook Tests
        run: pnpm run storybook:ci

  vrt-storybook:
    needs: build-storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # この指定がないと比較に失敗する

      - name: Get node version from volta
        id: get-node-version
        uses: keita-hino/get-node-version-from-volta@main

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Restore Storybook
        id: storybook_cache
        uses: actions/cache@v3
        with:
          path: storybook-static
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Install Fonts
        run: sudo apt-get install fonts-ipafont-gothic fonts-ipafont-mincho

      - name: Run Storycap
        run: pnpm run vrt:snapshot

      - name: Run reg-suit
        run: pnpm run vrt:run
